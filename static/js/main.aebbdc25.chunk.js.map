{"version":3,"sources":["ui/cellColor.js","utils.js","models/2048.js","ui/Button/index.js","components/twenty48/index.js","App.js","reportWebVitals.js","history.js","redux/reducer.js","redux/store.js","redux/middlewares.js","index.js"],"names":["0","2","4","8","16","32","64","128","256","512","1024","2048","4096","8192","16384","require","transpose","matrix","reduce","prev","next","map","item","i","concat","putRandomNumber","array","randomNumber","possibleNumbers","Math","floor","random","length","addStartNumber","emptyArray","x","z","push","getEmptyCoordinates","arrayClone","JSON","parse","stringify","randomEmptyCoord","moveNulls","newBoard","a","row","b","current","unshift","transformArray","board","_","cloneDeep","j","moveLeft","arr","reverse","nullBoard","moveRight","moveUp","transformBoard","moveDown","moduleName","prefix","INIT_NEW_GAME","SET_NEW_NUMBER","MOVE_LEFT","MOVE_RIGHT","MOVE_UP","MOVE_DOWN","WIN_GAME","UPDATE_OLD_ARRAY","SET_NEW_MAX_SCORE","ReducerRecord","gameArray","window","localStorage","getItem","maxScore","prevGameArray","isWin","stateSelector","state","gameArraySelector","createSelector","maxScoreSelector","isWinSelector","currentScoreSelector","count","number","Button","props","children","hotKey","onClick","rest","inputEl","useRef","Mousetrap","bind","click","ref","Twenty48","currentScore","startGame","setNewNumber","getRight","getLeft","getUp","getDown","winGame","useEffect","alert","useState","touchStartPosition","setStartPosition","onTouchStart","event","changedTouches","id","onTouchEnd","startX","screenX","startY","screenY","endX","endY","abs","handleTouchEnd","rowKey","className","cell","cellKey","style","backgroundColor","colorMap","areEqual","prevProps","nextProps","connect","type","payload","dispatch","getState","compareArrays","isEqual","memo","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","browserHistory","createBrowserHistory","combineReducers","form","formReducer","twenty48Module","action","Object","assign","connectRouter","history","enhancer","applyMiddleware","thunk","logger","routerMiddleware","includes","oldMatrix","setItem","stringArr","isGameOver","console","log","store","createStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aebbdc25.chunk.js","sourcesContent":["export default ({\r\n  0: \"rgb(216, 206, 196)\",\r\n  2: \"rgb(240, 228, 217)\",\r\n  4: \"rgb(238, 225, 199)\",\r\n  8: \"rgb(253, 175, 112)\",\r\n  16: \"rgb(255, 143, 86)\",\r\n  32: \"rgb(255, 112, 80)\",\r\n  64: \"rgb(255, 70, 18)\",\r\n  128: \"rgb(241, 210, 104)\",\r\n  256: \"rgb(241, 208, 86)\",\r\n  512: \"rgb(240, 203, 65)\",\r\n  1024: \"rgb(242, 201, 39)\",\r\n  2048: \"rgb(243, 197, 0)\",\r\n  4096: \"rgb(255, 80, 75)\",\r\n  8192: \"rgb(255, 34, 75)\",\r\n  16384: \"rgb(248, 19, 30)\",\r\n})\r\n","import _ from 'lodash'\r\nconst faker = require('faker')\r\n\r\nexport const getRandomInt = (max) => {\r\n  return Math.floor(Math.random() * Math.floor(max));\r\n}\r\n\r\nexport const isNestedArray = (defaultArr = [], newArray = []) => {\r\n  for(let i = 0; i < defaultArr.length; i++){\r\n    for(let j = 0; j < newArray.length; j++){\r\n      if(i === j){\r\n        if(defaultArr[i] !== newArray[j]){\r\n          return false\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return true\r\n}\r\n\r\n\r\n//---------2048---------\r\n\r\n\r\n/*\r\nexport const getArrayCoordinates = (array) => {\r\n  const arrayCoordinates = []\r\n\r\n  for (let i = 0; i < array.length; i++) {\r\n    for (let j = 0; j < array[i].length; j++) {\r\n      if (array[i][j] === 0) {\r\n        arrayCoordinates.push([i, j])\r\n      }\r\n    }\r\n  }\r\n  return arrayCoordinates\r\n}\r\n*/\r\nexport function transpose(matrix) {\r\n  return matrix.reduce((prev, next) => next.map((item, i) =>\r\n    (prev[i] || []).concat(next[i])\r\n  ), []);\r\n}\r\n\r\n// const matrixRotateRight = (arr, count) => {\r\n//   if(count > 0){\r\n//     console.log(arr)\r\n//     const array = transpose(arr)\r\n//     console.log(array)\r\n//     return matrixRotateRight(array, --count)\r\n//   } else {\r\n//     return arr\r\n//   }\r\n// }\r\n\r\nexport const addStartNumber = () => {\r\n  const possibleNumbers = [2,2,2,4]\r\n  const randomNumber = possibleNumbers[Math.floor(Math.random() * possibleNumbers.length)]\r\n  return randomNumber\r\n}\r\n\r\nexport const getEmptyCoordinates = (array) => {\r\n  const emptyArray = [];\r\n  for (let x = 0; x < array.length; x++) {\r\n    for (let z = 0; z < array[x].length; z++) {\r\n      if (array[x][z] === 0) {emptyArray.push([x, z])}\r\n    }\r\n  }\r\n  return emptyArray;\r\n}\r\n\r\n\r\nexport const putRandomNumber = (array) => {\r\n  const randomNumber = addStartNumber()\r\n  const emptyArray = getEmptyCoordinates(array)\r\n  //todo: склонировать array (библиотека lodash/json stringify)\r\n  let arrayClone = JSON.parse(JSON.stringify(array));\r\n  const randomEmptyCoord = emptyArray[Math.floor(Math.random() * emptyArray.length)]\r\n  //arrayClone[Math.floor(Math.random() * arrayClone.length)][Math.floor(Math.random() * arrayClone.length)] = randomNumber\r\n  if (emptyArray.length > 0) {\r\n    arrayClone[randomEmptyCoord[0]][randomEmptyCoord[1]] = randomNumber\r\n    return arrayClone\r\n  }\r\n  return arrayClone\r\n}\r\n\r\nexport const moveNulls = (array) => {\r\n  let newBoard = []\r\n  for (let a = 0; a < array.length; a++) {\r\n    let row = [];\r\n    for (let b = 0; b < array[a].length; b++) {\r\n      let current = array[a][b];\r\n      (current === 0) ? row.unshift(current) : row.push(current);\r\n    }\r\n    newBoard.push(row);\r\n  }\r\n  return newBoard\r\n}\r\n\r\nexport const transformArray = (board) => {\r\n  let newBoard = _.cloneDeep(board)\r\n  for(let i = 0; i < newBoard.length; i++) {\r\n    for (let j = newBoard.length - 1; j >= 0; j--) {\r\n      if (newBoard[i][j] > 0 && newBoard[i][j] === newBoard[i][j - 1]) {\r\n        newBoard[i][j] = newBoard[i][j - 1] * 2\r\n        newBoard[i][j - 1] = 0\r\n      } else if (newBoard[i][j] === 0 && newBoard[i][j - 1] > 0) {\r\n        newBoard[i][j] = newBoard[i][j - 1]\r\n        newBoard[i][j - 1] = 0\r\n      }\r\n    }\r\n  }\r\n  return newBoard\r\n}\r\n\r\n\r\nexport const moveLeft = (arr) => {\r\n  const board = _.cloneDeep(arr)\r\n  const array = board.map((item) => item.reverse())\r\n  const nullBoard = moveNulls(array)\r\n\r\n  const transformBoard = transformArray(nullBoard)\r\n  return transformBoard.map((item) => item.reverse())\r\n}\r\n\r\nexport const moveRight = (arr) => {\r\n  const board = _.cloneDeep(arr)\r\n  const nullBoard = moveNulls(board)\r\n  const transformBoard = transformArray(nullBoard)\r\n  return transformBoard\r\n}\r\n\r\nexport const moveUp = (arr) => {\r\n  const board = _.cloneDeep(arr)\r\n  const array = transpose(board)\r\n  array.map((item) => item.reverse())\r\n  const nullBoard = moveNulls(array)\r\n  const transformBoard = transformArray(nullBoard)\r\n  transformBoard.map((item) => item.reverse())\r\n  return transpose(transformBoard)\r\n}\r\n\r\nexport const moveDown = (arr) => {\r\n  const board = _.cloneDeep(arr)\r\n  const array = transpose(board)\r\n  const nullBoard = moveNulls(array)\r\n  const transformBoard = transformArray(nullBoard)\r\n  return transpose(transformBoard)\r\n\r\n}\r\n\r\nexport const isGameOver = (arr) => {\r\n  const stringArr = JSON.stringify(arr)\r\n  //console.log(stringArr === JSON.stringify(moveLeft(arr)), stringArr === JSON.stringify(moveDown(arr)), stringArr === JSON.stringify(moveNulls(arr)))\r\n  if(stringArr === JSON.stringify(moveLeft(arr)) && stringArr === JSON.stringify(moveDown(arr)) && stringArr === JSON.stringify(moveNulls(arr))){\r\n    //alert(\"GAME OVER!\")\r\n    return true\r\n  } else {\r\n    return false\r\n  }\r\n}\r\n\r\n\r\nexport const generateRandomMatrix = () => {\r\n  const array = []\r\n  for(let i = 0; i < 4; i++){\r\n    for(let j = 0; j <4; j++){\r\n      array[i][j] = faker.random.arrayElement(arrayPowersOfTwo(15))\r\n    }\r\n  }\r\n  return array\r\n}\r\n\r\nexport const arrayPowersOfTwo = (n) => {\r\n  const arr = []\r\n  for(let i = 0; i < n; i++){\r\n    arr[i] = Math.pow(2, n)\r\n  }\r\n  return arr\r\n}\r\n\r\n\r\nexport const powerOfTwo = (n) => faker.random.arrayElement(arrayPowersOfTwo(n))","import {createSelector} from 'reselect'\r\nimport {putRandomNumber, moveLeft, moveRight, moveUp, moveDown} from \"../utils\";\r\nimport _ from 'lodash'\r\n\r\n\r\n/**\r\n * Constants\r\n * */\r\n\r\nexport const moduleName = '2048'\r\nconst prefix = moduleName\r\n/*ACTIONS  */\r\nexport const INIT_NEW_GAME = `${prefix}/INIT_NEW_GAME`\r\nexport const SET_NEW_NUMBER = `${prefix}/SET_NEW_NUMBER`\r\nexport const MOVE_LEFT = `${prefix}/MOVE_LEFT`\r\nexport const MOVE_RIGHT = `${prefix}/MOVE_RIGHT`\r\nexport const MOVE_UP = `${prefix}/MOVE_UP`\r\nexport const MOVE_DOWN = `${prefix}/MOVE_DOWN`\r\nexport const WIN_GAME = `${prefix}/WIN_GAME`\r\nexport const UPDATE_OLD_ARRAY = `${prefix}/UPDATE_OLD_ARRAY`\r\nexport const SET_NEW_MAX_SCORE = `${prefix}/SET_NEW_MAX_SCORE`\r\n/**\r\n * Reducer\r\n * */\r\n\r\nexport const ReducerRecord = {\r\n  gameArray: JSON.parse(window.localStorage.getItem(\"gameArray\")) || [[0,0,0,0], [0,0,0,0], [0,0,0,0], [0,0,0,0]],\r\n  maxScore: window.localStorage.getItem(\"maxScore\"),\r\n  prevGameArray: [[0,0,0,0], [0,0,0,0], [0,0,0,0], [0,0,0,0]],\r\n  isWin: false\r\n}\r\n\r\nexport default function reducer(state = ReducerRecord, action) {\r\n  const {type, payload} = action\r\n\r\n  switch (type) {\r\n    case INIT_NEW_GAME:\r\n      return Object.assign({}, state, {\r\n        gameArray: [[0,0,0,0], [0,0,0,0], [0,0,0,0], [0,0,0,0]],\r\n        prevGameArray: [[0,0,0,0], [0,0,0,0], [0,0,0,0], [0,0,0,0]],\r\n        isWin: false\r\n      })\r\n    case SET_NEW_NUMBER:\r\n      return Object.assign({}, state, {\r\n        gameArray: payload,\r\n      })\r\n    case MOVE_RIGHT:\r\n    case MOVE_LEFT:\r\n    case MOVE_UP:\r\n    case MOVE_DOWN:\r\n      return Object.assign({}, state, {\r\n        gameArray: payload,\r\n      })\r\n    case WIN_GAME:\r\n      return Object.assign({}, state, {\r\n        isWin: payload,\r\n      })\r\n\r\n    case UPDATE_OLD_ARRAY:\r\n      return Object.assign({}, state, {\r\n        prevGameArray: payload,\r\n      })\r\n\r\n    case SET_NEW_MAX_SCORE:\r\n      return Object.assign({}, state, {\r\n        maxScore: payload,\r\n      })\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/**\r\n * Selectors\r\n * */\r\n\r\nexport const stateSelector = state => state[moduleName]\r\nexport const gameArraySelector = createSelector(stateSelector, state => state.gameArray)\r\nexport const maxScoreSelector = createSelector(stateSelector, state => state.maxScore)\r\nexport const isWinSelector = createSelector(stateSelector, state => state.isWin)\r\nexport const currentScoreSelector = createSelector(stateSelector, state => {\r\n  let count = 0\r\n  state.gameArray.map((item)=>{\r\n    item.map(number=>{\r\n      count += number\r\n    })\r\n  })\r\n  return count\r\n})\r\n/**\r\n * Action creators\r\n * */\r\n\r\n\r\n/*export const startGame = () => ({\r\n  type: SET_NEW_GAME,\r\n  payload: [getRandomInt(4)]\r\n})*/\r\n\r\n\r\n/**\r\n * Redux thunks\r\n * */\r\n\r\nexport const startGame = () => ({\r\n    type: SET_NEW_NUMBER,\r\n    payload: putRandomNumber([[0,0,0,0], [0,0,0,0], [0,0,0,0], [0,0,0,0]])\r\n\r\n})\r\nexport const winGame = () => ({\r\n  type: WIN_GAME,\r\n  payload: true\r\n\r\n})\r\n\r\nexport const setNewNumber = () => (dispatch, getState) => {\r\n  const {gameArray} = getState()[moduleName]\r\n\r\n  dispatch({\r\n    type: SET_NEW_NUMBER,\r\n    payload: putRandomNumber(gameArray)\r\n\r\n  })\r\n}\r\n\r\nexport const getLeft = () => async (dispatch, getState) => {\r\n  const {gameArray} = getState()[moduleName]\r\n  const compareArrays = _.isEqual(gameArray, moveLeft(moveLeft(gameArray, true))) ? gameArray : putRandomNumber(moveLeft(moveLeft(gameArray)))\r\n  await dispatch({\r\n    type: MOVE_LEFT,\r\n    payload: compareArrays\r\n  })\r\n}\r\n\r\nexport const getRight = () => async (dispatch, getState) => {\r\n  const {gameArray} = getState()[moduleName]\r\n  const compareArrays = _.isEqual(gameArray, moveRight(moveRight(gameArray))) ? gameArray : putRandomNumber(moveRight(moveRight(gameArray)))\r\n  await dispatch({\r\n    type: MOVE_RIGHT,\r\n    payload: compareArrays\r\n  })\r\n}\r\n\r\nexport const getUp = () => async (dispatch, getState) => {\r\n  const {gameArray} = getState()[moduleName]\r\n  const compareArrays = _.isEqual(gameArray, moveUp(moveUp(gameArray))) ? gameArray : putRandomNumber(moveUp(moveUp(gameArray)))\r\n  await dispatch({\r\n    type: MOVE_UP,\r\n    payload: compareArrays\r\n  })\r\n}\r\n\r\nexport const getDown = () => async (dispatch, getState) => {\r\n  const {gameArray} = getState()[moduleName]\r\n  const compareArrays = _.isEqual(gameArray, moveDown(moveDown(gameArray))) ? gameArray : putRandomNumber(moveDown(moveDown(gameArray)))\r\n  await dispatch({\r\n    type: MOVE_DOWN,\r\n    payload: compareArrays\r\n  })\r\n}\r\n\r\n/*export const handleSetValue = (value) => (dispatch, getState) => {\r\n  const currentOrder = getState()[moduleName].currentOrder /!* getState - возвращает значение из стора moduleName = simon*!/\r\n  const order = getState()[moduleName].order\r\n  const currentValue = [...currentOrder, value]\r\n  if(JSON.stringify(order) === JSON.stringify(currentValue)){\r\n    dispatch({\r\n      type: GET_NEW_ORDER,\r\n      payload: [...order, getRandomInt(4)]\r\n    })\r\n  } else {\r\n    if(isNestedArray(order, currentValue)) {\r\n      dispatch({\r\n        type: SET_ORDER,\r\n        payload: currentValue\r\n      })\r\n    } else {\r\n      dispatch({\r\n        type: FAIL_ITERATION\r\n      })\r\n    }\r\n  }\r\n}*/\r\n\r\n\r\n","import React, {useRef} from \"react\"\r\nimport Mousetrap  from 'mousetrap';\r\n\r\nconst Button = props => {\r\n  const {children, hotKey, onClick, ...rest} = props\r\n  const inputEl = useRef(null)\r\n\r\n  if(onClick){\r\n    Mousetrap.bind(hotKey, () => {onClick()})\r\n  } else {\r\n    Mousetrap.bind(hotKey, () => {inputEl.click()})\r\n  }\r\n\r\n  return <button\r\n    onClick={onClick}\r\n    ref={inputEl}\r\n    {...rest}\r\n  >\r\n    {children}\r\n  </button>\r\n}\r\n\r\nexport default Button","import React, {useEffect, memo, useState} from \"react\"\r\nimport {TransitionGroup, CSSTransition} from 'react-transition-group'\r\nimport { connect } from 'react-redux'\r\nimport colorMap from '../../ui/cellColor'\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport {\r\n  startGame,\r\n  setNewNumber,\r\n  gameArraySelector,\r\n  maxScoreSelector,\r\n  currentScoreSelector,\r\n  isWinSelector,\r\n  getRight,\r\n  getLeft,\r\n  getUp,\r\n  getDown,\r\n  winGame\r\n} from \"../../models/2048\";\r\nimport Button from \"../../ui/Button\"\r\n\r\n\r\nfunction Cell({cell}) {\r\n  return <div className=\"cell\" style={{backgroundColor: colorMap[cell]}}>{cell}</div>\r\n}\r\n\r\nfunction Twenty48({gameArray, maxScore, currentScore, startGame, setNewNumber, getRight, getLeft, getUp, getDown, winGame, isWin}) {\r\n  useEffect(()=>{\r\n    if(currentScore > 2047 && !isWin){\r\n      winGame()\r\n      alert(\"YOU WON!\")\r\n    }\r\n  }, [currentScore])\r\n  useEffect(()=>{\r\n    if(!window.localStorage.getItem(\"gameArray\")){\r\n      startGame()\r\n    }\r\n  },[setNewNumber, startGame])\r\n  const [touchStartPosition, setStartPosition] = useState(null)\r\n  const handleTouchEnd = (event) => {\r\n    const startX = touchStartPosition.screenX\r\n    const startY = touchStartPosition.screenY\r\n    const endX = event.changedTouches[0].screenX\r\n    const endY = event.changedTouches[0].screenY\r\n    if(Math.abs(startX - endX) > Math.abs(startY - endY)){\r\n      if (startX > endX){\r\n        getLeft()\r\n      } else {\r\n        getRight()\r\n      }\r\n    } else {\r\n      if (startY > endY) {\r\n        getUp()\r\n      } else {\r\n        getDown()\r\n      }\r\n    }\r\n  }\r\n  return(\r\n    <div onTouchStart={(event)=>setStartPosition(event.changedTouches[0])}\r\n         id=\"2048\"\r\n         onTouchEnd={(event)=>handleTouchEnd(event)}>\r\n      <p>*2048*</p>\r\n      <div>\r\n        <button id=\"start2048\" onClick={()=>startGame()}>Start Game</button>\r\n        <p>Max Score: {maxScore}</p>\r\n        <p>Score: {currentScore}</p>\r\n      </div>\r\n      <div>\r\n        <Button onClick={()=>getUp()} hotKey='up'>UP</Button>\r\n        <Button onClick={()=>getDown()} hotKey='down'>DOWN</Button>\r\n        <Button onClick={()=>getLeft()} hotKey='left'>LEFT</Button>\r\n        <Button onClick={()=>getRight()} hotKey='right'>RIGHT</Button>\r\n      </div>\r\n        {gameArray.map((row, rowKey)=>{\r\n          return (\r\n              <div className=\"row\" key={rowKey}>\r\n                {row.map((cell, cellKey)=>{\r\n                  return(\r\n                      <div className=\"cell\" key={cellKey} style={{backgroundColor: colorMap[cell]}}>{cell}</div>\r\n                  )\r\n                })}\r\n              </div>\r\n          )\r\n        })}\r\n    </div>\r\n  )\r\n}\r\nfunction areEqual(prevProps, nextProps) {\r\n  /*\r\n  возвращает true, если nextProps рендерит\r\n  тот же результат что и prevProps,\r\n  иначе возвращает false\r\n  */\r\n  if(JSON.stringify(prevProps.gameArray) === JSON.stringify(nextProps.gameArray)){\r\n    return true\r\n  }else{\r\n    return false\r\n  }\r\n}\r\nexport default connect(state => ({\r\n  gameArray: gameArraySelector(state),\r\n  maxScore: maxScoreSelector(state),\r\n  currentScore: currentScoreSelector(state),\r\n  isWin: isWinSelector(state)\r\n}), {\r\n  startGame, setNewNumber, getRight, getLeft, getUp, getDown, winGame\r\n})(memo(Twenty48, areEqual))\r\n\r\n\r\n/*\r\n return (\r\n                 <TransitionGroup className=\"row game-array\" key={rowKey}>\r\n                  {row.map((cell, key)=>{\r\n                    return(\r\n                      <CSSTransition classNames={cell === 0 ? \"\" : \"item\"} key={uuidv4()} timeout={100}>\r\n                        <Cell cell={cell}/>\r\n                      </CSSTransition>\r\n                    )\r\n                  })}\r\n                 </TransitionGroup>\r\n          )\r\n        })}\r\n */","import React from \"react\"\r\nimport './App.css';\r\nimport Twenty48 from \"./components/twenty48\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n     <Twenty48 />\r\n    </div>\r\n  );\r\n}\r\nexport default App\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { createBrowserHistory } from 'history'\r\n\r\nconst browserHistory = createBrowserHistory()\r\n\r\nexport default browserHistory","import {combineReducers} from 'redux'\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport twenty48Reducer, {moduleName as twenty48Module} from '../models/2048'\r\nimport {connectRouter} from \"connected-react-router\";\r\nimport history from '../history'\r\n\r\nexport default combineReducers({\r\n  form: formReducer,\r\n  [twenty48Module]: twenty48Reducer,\r\n  router: connectRouter(history)\r\n})","import {createStore, applyMiddleware} from 'redux'\r\nimport logger from 'redux-logger'\r\nimport thunk from 'redux-thunk'\r\nimport reducer from './reducer'\r\nimport {routerMiddleware} from 'connected-react-router'\r\nimport history from '../history'\r\nimport {savePrevArray, usingLocalStorage, gameOver, winGame} from './middlewares'\r\nconst enhancer = applyMiddleware(thunk, logger, routerMiddleware(history), savePrevArray, usingLocalStorage, gameOver, winGame)\r\nconst store = createStore(reducer, enhancer)\r\n\r\nexport default store","import {UPDATE_OLD_ARRAY, moduleName, currentScoreSelector, SET_NEW_MAX_SCORE} from '../models/2048.js'\r\nimport {isGameOver, isWinGame, putRandomNumber} from '../utils'\r\nimport {INIT_NEW_GAME, SET_NEW_NUMBER, WIN_GAME} from \"../models/2048\";\r\nexport const savePrevArray = ({dispatch, getState}) => next => ({type, payload}) => {\r\n  if(type.includes('MOVE')){\r\n    const oldMatrix = getState()[moduleName].gameArray\r\n    dispatch({\r\n      type: UPDATE_OLD_ARRAY,\r\n      payload: oldMatrix\r\n    })\r\n  }\r\n  return next ({type, payload})\r\n}\r\n\r\nexport const usingLocalStorage = () => next => ({type, payload}) => {\r\n  if(type.includes('MOVE') || type.includes('NEW')){\r\n    window.localStorage.setItem(\"gameArray\", JSON.stringify(payload))\r\n  }\r\n  return next ({type, payload})\r\n}\r\n\r\nexport const gameOver = ({dispatch}) => next => ({type, payload}) => {\r\n  if(type.includes('MOVE')){\r\n    if(isGameOver(payload)){\r\n      const maxScore = currentScoreSelector({[moduleName]: {gameArray: payload}})\r\n      console.log(maxScore)\r\n      if(window.localStorage.getItem(\"maxScore\") < maxScore){\r\n        window.localStorage.setItem(\"maxScore\", maxScore)\r\n        dispatch({\r\n          type: SET_NEW_MAX_SCORE,\r\n          payload: maxScore\r\n        })\r\n      }\r\n\r\n    }\r\n  }\r\n  return next ({type, payload})\r\n}\r\n\r\nexport const winGame = ({dispatch}) => next => ({type, payload}) => {\r\n  if(type.includes('MOVE')){\r\n      const maxScore = currentScoreSelector({[moduleName]: {gameArray: payload}})\r\n    if(maxScore > 2047) {\r\n      const isConfirm = false//window.confirm(\"CONGRATULATIONS! Continue game?\")\r\n      if(isConfirm){\r\n        dispatch({\r\n          type: WIN_GAME,\r\n          payload: maxScore\r\n        })\r\n      } else {\r\n        dispatch({\r\n          type: SET_NEW_NUMBER,\r\n          payload: putRandomNumber([[0,0,0,0], [0,0,0,0], [0,0,0,0], [0,0,0,0]])\r\n        })\r\n      }\r\n    }\r\n  }\r\n  return next ({type, payload})\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals'\r\nimport store from './redux/store'\r\nimport {Provider} from 'react-redux'\r\nimport {ConnectedRouter} from 'connected-react-router'\r\nimport history from './history'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <ConnectedRouter history={history}>\r\n      <App />\r\n    </ConnectedRouter>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}